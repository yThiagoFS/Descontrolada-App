@inherits ComponentBase

<CascadingValue Value="this">
    @ChildContent
</CascadingValue>

@if (_errorMessages != null)
{
    <div class="error-modal @_activeModalClass">
        <div class="error-modal-content">
            @foreach (var error in _errorMessages)
            {
                <div>@error</div>
            }
        </div>
        <span class="error-modal-close" @onclick="() => CloseModal()">&times;</span>
    </div>
}

@code  
{
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    private List<string> _errorMessages { get; set; } = new();
    private bool _renderErrorMessages = false;
    private string _activeModalClass => _renderErrorMessages ? "active"  : string.Empty;
    
    public void ProccessError(List<string>? errors, Exception? exception = null)
    {
        _errorMessages = errors;
        RenderErrors(exception);
    }

    public void ProccessError(string error, Exception? exception = null)
    {
        _errorMessages.Add(error);
        RenderErrors(exception);
    }

    private void RenderErrors(Exception? exception) 
    {
        _renderErrorMessages = true;

        if(exception is not null)
            _errorMessages.Add(exception.Message);
        
        StateHasChanged();
    }

    private void CloseModal() 
        => _renderErrorMessages = false;

    public void ClearErrors()
    {
        _errorMessages.Clear();
        _renderErrorMessages = false;
        StateHasChanged();
    }

    public bool HasError => _errorMessages.Any();
}